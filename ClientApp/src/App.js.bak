//import React, { Component } from 'react';
//import { Route } from 'react-router';
//import { Layout } from './components/Layout';
//import { Home } from './components/Home';
//import { FetchData } from './components/FetchData';
//import { Counter } from './components/Counter';
//import './custom.css'

//export default class App extends Component {
//    static displayName = App.name;

//  render () {
//    return (
//      <Layout>
//        <Route exact path='/' component={Home} />
//        <Route path='/counter' component={Counter} />
//            <Route path='/fetch-data' component={FetchData} />
//        </Layout>
//    );
//  }
//}


//import React from 'react';
//import PropTypes from 'prop-types';
//import { makeStyles } from '@material-ui/core/styles';
//import AppBar from '@material-ui/core/AppBar';
//import Tabs from '@material-ui/core/Tabs';
//import Tab from '@material-ui/core/Tab';
//import Typography from '@material-ui/core/Typography';
//import Box from '@material-ui/core/Box';

//function TabPanel(props) {
//    const { children, value, index, ...other } = props;

//    return (
//        <div
//            role="tabpanel"
//            hidden={value !== index}
//            id={`simple-tabpanel-${index}`}
//            aria-labelledby={`simple-tab-${index}`}
//            {...other}
//        >
//            {value === index && (
//                <Box p={3}>
//                    <Typography>{children}</Typography>
//                </Box>
//            )}
//        </div>
//    );
//}

//TabPanel.propTypes = {
//    children: PropTypes.node,
//    index: PropTypes.any.isRequired,
//    value: PropTypes.any.isRequired,
//};

//function a11yProps(index) {
//    return {
//        id: `simple-tab-${index}`,
//        'aria-controls': `simple-tabpanel-${index}`,
//    };
//}

//const useStyles = makeStyles((theme) => ({
//    root: {
//        flexGrow: 1,
//        backgroundColor: theme.palette.background.paper,
//    },
//}));

//export default function SimpleTabs() {
//    const classes = useStyles();
//    const [value, setValue] = React.useState(0);

//    const handleChange = (event, newValue) => {
//        setValue(newValue);
//    };

//    return (
//        <div className={classes.root}>
//            <AppBar position="static">
//                <Tabs value={value} onChange={handleChange} aria-label="simple tabs example">
//                    <Tab label="Item One" {...a11yProps(0)} />
//                    <Tab label="Item Two" {...a11yProps(1)} />
//                    <Tab label="Item Three" {...a11yProps(2)} />
//                </Tabs>
//            </AppBar>
//            <TabPanel value={value} index={0}>
//                Item One
//            </TabPanel>
//            <TabPanel value={value} index={1}>
//                Item Two
//            </TabPanel>
//            <TabPanel value={value} index={2}>
//                Item Three
//            </TabPanel>
//        </div>
//    );
//}

import React from "react";
import { AppBar, Tabs, Tab } from "@material-ui/core";
import { Home, Send, Person, LinkedIn } from "@material-ui/icons";
import useMediaQuery from '@material-ui/core/useMediaQuery';
import { createTheme, ThemeProvider } from '@material-ui/core/styles';
import CssBaseline from '@material-ui/core/CssBaseline';
import Typography from '@material-ui/core/Typography';
import Box from '@material-ui/core/Box';
//import styled from "styled-components";

//const StyledAppBar = styled(AppBar)
//    ` &&
//{
//    background-color: rgb(5, 128, 5);
//    color: #ff99a0;
//    font-size: 1rem;
//    font-weight: 800;
//}
//`;

function TabPanel(props) {
    const { children, value, index, ...other } = props;

    return (
        <div
            role="tabpanel"
            hidden={value !== index}
            id={`simple-tabpanel-${index}`}
            aria-labelledby={`simple-tab-${index}`}
            {...other}
        >
            {value === index && (
                <Box p={3}>
                    <Typography>{children}</Typography>
                </Box>
            )}
        </div>
    );
}

export default function TopHeader()  {
    const [value, setValue] = React.useState(0);

    const handleChange = (event, newValue) => {
        setValue(newValue);
    };

    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');

    const theme = React.useMemo(
        () =>
            createTheme({
                palette: {
                    type: 'dark',/*prefersDarkMode ? 'dark' : 'light',*/
                },
            }),
        [prefersDarkMode],
    );

    return (
        <ThemeProvider theme={theme}>
            <CssBaseline>
            <AppBar position="static">
                <Tabs value={value} onChange={handleChange} aria-label="Main Tabs">
                    <Tab label="Home" icon={<Home />} />
                    <Tab label="Send" icon={<Send />} />
                        <Tab label="Profile" icon={<Person />} />
                        <Tab label="½ºÀ¡" icon={<LinkedIn/> }/>
                </Tabs>
                </AppBar>
                <TabPanel value={value} index={0}>
                Item One
                </TabPanel>
                <TabPanel value={value} index={1}>
                  Item Two
                </TabPanel>
                <TabPanel value={value} index={2}>
                  Item Three
                </TabPanel>
                <TabPanel value={value} index={3}>
                    Item 4
                </TabPanel>
            </CssBaseline>
        </ThemeProvider>
    );
};
